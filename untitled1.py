# -*- coding: utf-8 -*-
"""
Created on Sun Aug 11 08:34:18 2019

@author: Matthew
"""

import numpy as np
from scipy.special import erf
from scipy.optimize import newton
import matplotlib.pyplot as plt

penalty = 10
mu = 1
sd = 1

def optimal_func(y):
    return 1/np.sqrt(np.pi)*np.exp(-y**2) - y*(1 - erf(y)) - np.sqrt(2)*penalty/sd
#y_optimal = newton(optimal_func, 1, tol=0.001)
#V = np.sqrt(2)*sd*y_optimal + mu
    
yvals = np.linspace(0,10,100)
plt.plot(yvals, optimal_func(yvals))