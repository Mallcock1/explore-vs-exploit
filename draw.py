# -*- coding: utf-8 -*-
"""
Matthew Allcock
"""

import numpy as np
import scipy as sc

def draw(dist_type, dist_params, n_decimal=2):
    """
    Draw one realisation from probability distribution defined by dist_type
    and dist_params.
    
    n_decimal (int) = number of decimal places to round draw to.
    """
    if dist_type == "uniform":
        # dist_params = [a, b]
        realisation = np.random.uniform(dist_params[0], dist_params[1])
    elif dist_type == "normal":
        # dist_params = [mu, sd]
        realisation = np.random.normal(dist_params[0], dist_params[1])
    elif dist_type == "lomax":
        # dist_params = [shape, loc, scale]
        realisation = sc.stats.pareto.rvs(dist_params[0], dist_params[1],
                                          dist_params[2])
    else:
        raise ValueError("dist_type must be uniform, normal, or lomax")
    
    return np.round(realisation, n_decimal)